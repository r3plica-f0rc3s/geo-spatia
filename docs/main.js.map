{"version":3,"sources":["webpack:///buffer (ignored)?472b","./src/app/services/guards/route-lock.guard.ts","util (ignored)","./src/app/all-nfts/all-nfts.component.html","./src/app/all-nfts/all-nfts.component.ts","webpack:///util (ignored)?1aa8","crypto (ignored)","buffer (ignored)","./src/app/retrieve-nfts/retrieve-nfts.component.ts","./src/app/retrieve-nfts/retrieve-nfts.component.html","./src/app/nft-list/nft-list.component.html","./src/app/nft-list/nft-list.component.ts","./src/app/services/svggenerator.service.ts","./src/environments/environment.ts","./src/app/wallet/wallet.component.ts","./src/app/wallet/wallet.component.html","./src/app/services/map-helper.service.ts","./src/app/services/device-detector.service.ts","./src/app/curtain/curtain.component.ts","./src/app/curtain/curtain.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/single-nft/single-nft.component.ts","./src/app/single-nft/single-nft.component.html","./src/app/app.module.ts","./src/app/ux-components/nft-grid/nft-grid.component.html","./src/app/ux-components/nft-grid/nft-grid.component.ts","./src/app/dialog/dialog.component.ts","./src/app/dialog/dialog.component.html","./src/app/ux-components/button/button.component.ts","./src/app/ux-components/button/button.component.html","./src/app/pipes/wei-to-one.pipe.ts","./src/app/ux-components/nft-list-item/nft-list-item.component.ts","./src/app/ux-components/nft-list-item/nft-list-item.component.html","./src/app/ux-components/date-picker/date-picker.component.ts","./src/app/ux-components/date-picker/date-picker.component.html","./src/app/sell/sell.component.html","./src/app/sell/sell.component.ts","./src/app/pipes/short-address.pipe.ts","./src/app/services/geolocation-service.service.ts","./src/app/transaction-result/transaction-result.component.ts","./src/app/transaction-result/transaction-result.component.html","./src/app/services/price-converter.service.ts","./src/app/ux-components/nft-marker/nft-marker.component.ts","./src/app/ux-components/nft-marker/nft-marker.component.html","./src/app/services/ux.service.ts","./src/app/map-gl/map-gl.component.ts","./src/app/map-gl/map-gl.component.html","./src/app/services/contract.service.ts","./src/app/start/start.component.ts","./src/app/ux-components/price-picker/price-picker.component.ts","./src/app/ux-components/price-picker/price-picker.component.html","./src/app/ux-components/nft-grid-item/nft-grid-item.component.ts","./src/app/ux-components/nft-grid-item/nft-grid-item.component.html","./src/app/ux-components/loading-button/loading-button.component.ts","./src/app/ux-components/loading-button/loading-button.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* (ignored) */","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanDeactivate,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { RetrieveNftsComponent } from 'src/app/retrieve-nfts/retrieve-nfts.component';\nimport { UxService } from '../ux.service';\n\n@Injectable()\nexport class RouteLockGuard\n  implements CanDeactivate<RetrieveNftsComponent>, CanActivate {\n  constructor(private uxService: UxService) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | boolean\n    | UrlTree\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree> {\n    return this.uxService.routeLock;\n  }\n  canDeactivate(\n    component: RetrieveNftsComponent,\n    currentRoute: ActivatedRouteSnapshot,\n    currentState: RouterStateSnapshot,\n    nextState?: RouterStateSnapshot\n  ):\n    | boolean\n    | UrlTree\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree> {\n    return !this.uxService.routeLock;\n  }\n}\n","/* (ignored) */","<button\n  *ngIf=\"isMobile\"\n  class=\"profile-panel\"\n  disableRipple\n  mat-fab\n  color=\"secondary\"\n  (click)=\"uxService.openLeftSidenav()\"\n>\n  <mat-icon>person</mat-icon>\n</button>\n<div class=\"sidenav-open\" *ngIf=\"isMobile\">\n  <button (click)=\"uxService.openSidenav()\" mat-fab color=\"primary\">\n    <mat-icon>view_list</mat-icon>\n  </button>\n</div>\n","import { MediaMatcher } from '@angular/cdk/layout';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ImageMarker } from '../services/map-helper.service';\nimport { UxService } from '../services/ux.service';\nimport { ContractService, GeoNFT } from '../services/contract.service';\nimport { MapHelperService } from '../services/map-helper.service';\n\n@Component({\n  templateUrl: './all-nfts.component.html',\n  styleUrls: ['./all-nfts.component.scss'],\n})\nexport class AllNFTsComponent implements OnInit {\n  isMobile: boolean;\n  coords;\n  public markers: ImageMarker[];\n  public NFTs: GeoNFT[];\n  constructor(\n    public uxService: UxService,\n    private mapHelperService: MapHelperService,\n    private router: Router,\n    private media: MediaMatcher,\n    private contractService: ContractService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.contractService.nfts$.subscribe((nfts) => {\n      if (!nfts) {\n        return;\n      }\n      this.NFTs = nfts;\n      this.mapHelperService.setMultipleMarkers(this.NFTs);\n    }, (err) => {\n    });\n    this.isMobile = this.media.matchMedia('(max-width: 700px)').matches;\n    this.uxService.enableSidenav();\n    this.uxService.enableLeftSidenav();\n    // this.mapHelperService.setMultipleMarkers(this.NFTs.map((nft) => {\n    //   return {\n    //     image: nft.svg,\n    //     coordinates: nft.location\n    //   }\n    // }))\n    // this.mapHelperService.findCurrentLocation().then((userLocation) => {\n    //   this.NFTsService.randomizeLocations(userLocation, 10, 0.25);\n    //   this.NFTsService.NFTs$.subscribe((nfts) => {\n    //     this.mapHelperService.setNearby(nfts.map((NFT: GeoNFT) => {\n    //       return {\n    //         image: NFT.image,\n    //         coordinates: NFT.location,\n    //       };\n    //     }));\n    //   });\n\n    // })\n\n  }\n}\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { ContractService, GeoNFT, TransactionResultEvent } from '../services/contract.service';\nimport { MapHelperService } from '../services/map-helper.service';\nimport { UxService } from '../services/ux.service';\n\n@Component({\n  templateUrl: './retrieve-nfts.component.html',\n  styleUrls: ['./retrieve-nfts.component.scss']\n})\nexport class RetrieveNftsComponent implements OnInit, OnDestroy {\n  subscriptions = [];\n  retrieving = false;\n  nftsToRetrieve: GeoNFT[] = [];\n  constructor(\n    private contractService: ContractService,\n    private mapHelperService: MapHelperService,\n    private uxService: UxService,\n    private router: Router) { }\n\n\n  ngOnInit(): void {\n    this.uxService.disableLeftSidenav();\n    this.uxService.disableSidenav();\n    this.subscriptions.push(\n      this.contractService.getNftsToRetrieve$().pipe(filter(x => x.length > 0)).subscribe((nftsToRetrieve) => {\n        this.mapHelperService.setMultipleMarkers(nftsToRetrieve);\n\n        this.nftsToRetrieve = nftsToRetrieve;\n      })\n    );\n\n  }\n\n  retrieve(): void {\n    this.retrieving = true;\n    this.contractService.retrieveNFTs(this.nftsToRetrieve.map(nft => String(nft.id)));\n    this.subscriptions.push(\n      this.contractService.transactions$.subscribe((transactionEvent: TransactionResultEvent) => {\n        if (transactionEvent && transactionEvent.success !== undefined) {\n          this.router.navigate(['/', 'transaction-result'], { state: { ...{ closable: true }, ...transactionEvent } });\n        }\n      }, (err) => {\n        this.router.navigate(['/', 'transaction-result'], { state: { success: false, closable: false } });\n      })\n    );\n\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((sub: Subscription) => {\n      sub.unsubscribe();\n    });\n  }\n\n}\n","<div class=\"main-container\">\n    <div class=\"top-wrapper\">\n      <div class=\"top-label\">\n        <span> You won following auctions </span>\n      </div>\n      <div class=\"close-wrapper\">\n       \n      </div>\n    </div>\n    <!-- TODO: NFT Grid -->\n    <div class=\"grid-list\">\n      <app-nft-grid [nfts]=\"nftsToRetrieve\"></app-nft-grid>\n    </div>\n\n  \n    <div\n      class=\"retrieve-button\"\n    >\n      <app-loading-button (click)=\"retrieve()\" [loading]=\"retrieving\">\n        <!-- <mat-icon>shopping_basket</mat-icon> -->\n        <span class=\"button-label\"> Retrieve </span>\n      </app-loading-button>\n    </div>\n\n  </div>\n  ","<mat-selection-list [multiple]=\"false\">\n  <mat-list-option\n    *ngFor=\"let nft of nfts; let i = index\"\n    (click)=\"confirmOrder(i)\"\n  >\n    <!-- <div class=\"nft-image\">\n      <button\n        mat-fab\n        class=\"nft-svg\"\n        preserveAspectRatio=\"none\"\n        viewBox=\"0 0 300 300\"\n        [innerHTML]=\"nft?.image\"\n      ></button>\n    </div> -->\n    <app-nft-list-item [nftId]=\"nft.id\"></app-nft-list-item>    \n  </mat-list-option>\n  <div class=\"no-results\">\n    <p *ngIf=\"nfts?.length === 0\">No available NFT's :(</p>\n  </div>\n</mat-selection-list>\n","import { ContractService, GeoNFT, NFT } from './../services/contract.service';\nimport { UxService } from './../services/ux.service';\nimport { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-nft-list',\n  templateUrl: './nft-list.component.html',\n  styleUrls: ['./nft-list.component.scss'],\n})\nexport class NftListComponent implements OnInit, OnChanges, OnDestroy {\n  @Input()\n  nfts: GeoNFT[] = [];\n  subscriptions = [];\n  constructor(\n    private uxService: UxService,\n    private router: Router,\n    public contractService: ContractService\n  ) {}\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log('rendering nfts list', this.nfts);\n  }\n\n  ngOnInit(): void {\n    console.log('rendering nfts list', this.nfts);\n  }\n\n  confirmOrder(i: number): void {\n    this.uxService.closeSidenav();\n    this.router.navigate(['single-nft', this.nfts[i].id]);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((sub: Subscription) => {\n      sub.unsubscribe();\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { generateFromString } from 'generate-avatar';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SVGGeneratorService {\n  constructor() {}\n\n  generateAvatar(str: string): string {\n    return generateFromString(str);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { filter, switchMap, tap } from 'rxjs/operators';\nimport { ContractService, WalletInfo } from './../services/contract.service';\nimport { DeviceDetectorService } from './../services/device-detector.service';\nimport { PriceConverterService } from './../services/price-converter.service';\nimport { UxService } from './../services/ux.service';\n\n@Component({\n  selector: 'app-wallet',\n  templateUrl: './wallet.component.html',\n  styleUrls: ['./wallet.component.scss']\n})\nexport class WalletComponent implements OnInit {\n  isMobile = !this.deviceDetectorService.isDesktop();\n  balance: number;\n  convertedBalance: string;\n  walletInfo: WalletInfo;\n  enableSales: boolean;\n  ownedNFTs$ = this.contractService.getOwnedNFTs$().pipe(tap(x => console.log('owned nfts', x)));\n  nftsWithBids = [];\n  nftsWithBids$ = this.contractService.getNftsWithMyBids$().pipe(tap(x => console.log('nfts with bids', x)));\n  constructor(\n    public uxService: UxService,\n    private deviceDetectorService: DeviceDetectorService,\n    public contractService: ContractService,\n    public priceConverter: PriceConverterService,\n  ) { }\n\n  ngOnInit(): void {\n    this.contractService.walletInfo$.pipe(\n      filter(x => !!x),\n      tap(walletInfo => this.walletInfo = walletInfo),\n      switchMap(walletInfo => this.priceConverter.convertOneToUSDT(Number(walletInfo.balance)))\n    ).subscribe((convertedBalance: number) => {\n      this.convertedBalance = convertedBalance.toFixed(2);\n      this.loadSalesStatus();\n    });\n\n    this.contractService.getNftsWithMyBids$().subscribe((nfts) => {\n      console.log('nfts with bids', nfts);\n      this.nftsWithBids = nfts;\n    });\n\n  }\n\n  loadSalesStatus(): void {\n    this.contractService.isApprovedForAll().then((result) => {\n      this.enableSales = result;\n    }).catch(e => {\n      console.error(e);\n    });\n  }\n\n  toggleSales(): void {\n    if (!this.enableSales) {\n      this.contractService.enableResalePermission();\n    } else {\n      this.contractService.disableResalePermission();\n    }\n  }\n\n  logout(): void {\n    this.contractService.logout();\n  }\n\n}\n","<mat-toolbar color=\"secondary\">\n  <div class=\"logo-nft\">\n    <span> GeoNFT </span>\n    <div class=\"sidenav-open fab-close\" *ngIf=\"isMobile\">\n      <button (click)=\"uxService.closeLeftSidenav()\" mat-icon-button>\n        <mat-icon color=\"primary\">close</mat-icon>\n      </button>\n    </div>\n  </div>\n</mat-toolbar>\n\n<div class=\"info-wrapper\">\n  <div class=\"address-bar\">\n    <button\n      class=\"wallet-button-wrapper\"\n      mat-raised-button\n      color=\"primary\"\n      aria-label=\"wallet address\"\n    >\n      <button\n        class=\"mini-fab\"\n        disableRipple\n        mat-mini-fab\n        color=\"secondary\"\n        (click)=\"uxService.openLeftSidenav()\"\n      >\n        <mat-icon>person</mat-icon>\n      </button>\n      <div class=\"wallet-button\">\n        <div class=\"start\">\n          {{ (contractService.walletInfo$ | async)?.address | shortAddress }}\n        </div>\n      </div>\n    </button>\n    <mat-slide-toggle\n      color=\"primary\"\n      (ngModelChange)=\"toggleSales()\"\n      [(ngModel)]=\"enableSales\"\n      >Sales enabled</mat-slide-toggle\n    >\n  </div>\n\n  <div class=\"wallet-label\">\n    <div class=\"divider-2\"></div>\n    <span> Wallet status </span>\n  </div>\n  <div class=\"description-wallet\">\n    <div>\n      <span> ~ {{ convertedBalance }} $ </span>\n    </div>\n    <div class=\"info-inner\">\n      <span class=\"amount\"> {{ walletInfo?.balance.substring(0, 12) }} </span>\n\n      <span> ONE </span>\n    </div>\n    <button (click)=\"logout()\" mat-raised-button color=\"primary\"><mat-icon>power_settings_new</mat-icon>\n      Logout</button>\n  </div>\n</div>\n<div class=\"wallet-label\" *ngIf=\"nftsWithBids.length > 0\">\n  <div class=\"divider\"></div>\n\n  <span class=\"collection-label\"> Nfts with your bids </span>\n</div>\n<app-nft-grid *ngIf=\"nftsWithBids.length > 0\" [nfts]=\"nftsWithBids\"></app-nft-grid>\n<!-- TODO -->\n<div class=\"wallet-label\" *ngIf=\"(ownedNFTs$ | async)?.length > 0\">\n  <div class=\"divider\"></div>\n\n  <span class=\"collection-label\"> NFT collection </span>\n</div>\n<app-nft-grid *ngIf=\"(ownedNFTs$ | async)?.length > 0\" [nfts]=\"ownedNFTs$ | async\"></app-nft-grid>\n","import { Injectable } from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { LngLat, LngLatBounds } from 'mapbox-gl';\nimport { BehaviorSubject } from 'rxjs';\nimport { GeoNFT } from './contract.service';\nimport { GeolocationService } from './geolocation-service.service';\n\nexport enum CameraState {\n  IDLE,\n  NEARBY,\n  SINGLE\n}\nexport interface MapStatus {\n  cameraState: CameraState;\n  markers?: GeoNFT[];\n  showUser: boolean;\n  userLocation?: LngLat;\n  changeCameraState: boolean;\n}\n\nexport interface ImageMarker {\n  image: SafeHtml;\n  coordinates: LngLat;\n  id: any;\n  layer: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapHelperService {\n  private mapStatusSubject = new BehaviorSubject<MapStatus>({\n    cameraState: CameraState.IDLE,\n    showUser: false,\n    changeCameraState: false\n  });\n  userLocation: LngLat = null;\n  mapStatus$ = this.mapStatusSubject.asObservable();\n  constructor(private locationService: GeolocationService) { }\n\n  findCurrentLocation(): Promise<LngLat> {\n    return this.locationService.getCurrentLocation().then((coords) => {\n      const lngLat = new LngLat(coords.longitude, coords.latitude);\n      this.mapStatusSubject.next({\n        cameraState: this.mapStatusSubject.getValue().cameraState,\n        showUser: true,\n        userLocation: lngLat,\n        changeCameraState: true\n      });\n      return lngLat;\n    });\n  }\n\n  setNearby(imageMarkers: GeoNFT[]): void {\n    this.locationService.getCurrentLocation().then((userLocation) => {\n      console.log(imageMarkers);\n      this.mapStatusSubject.next({\n        cameraState: CameraState.NEARBY,\n        showUser: true,\n        markers: imageMarkers,\n        userLocation: new LngLat(userLocation.longitude, userLocation.latitude),\n        changeCameraState: true\n      });\n    });\n  }\n\n  setSingleMarker(imageMarker: GeoNFT): void {\n    this.mapStatusSubject.next({\n      cameraState: CameraState.SINGLE,\n      showUser: false,\n      markers: [imageMarker],\n      userLocation: this.mapStatusSubject.getValue().userLocation,\n      changeCameraState: true\n    });\n  }\n\n  setMultipleMarkers(imageMarkers: GeoNFT[]): void {\n    this.mapStatusSubject.next({\n      showUser: false,\n      cameraState: CameraState.IDLE,\n      markers: imageMarkers,\n      changeCameraState: false\n    });\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class DeviceDetectorService {\n  userAgent: string;\n  THRESHOLD = 1000;\n\n  isDesktop(): boolean {\n   if (window) {\n      if (window.innerWidth > this.THRESHOLD) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n}\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\n\n\n@Component({\n  selector: 'app-curtain',\n  templateUrl: './curtain.component.html',\n  styleUrls: ['./curtain.component.scss'],\n  animations: [\n    trigger('disableButton', [\n      state('true', style({ width: '*' })),\n      state('false', style({ width: '20px' })),\n      transition('false <=> true', animate('500ms cubic-bezier(0.32,0,1,1)')),\n    ]),\n  ],\n})\nexport class CurtainComponent implements AfterViewInit {\n  @Output()\n  connectToMetamask = new EventEmitter();\n  @Input()\n  loading = false;\n  preparingGraphics = true;\n  @ViewChild('container') vantaElement: ElementRef;\n  constructor() { }\n  ngAfterViewInit(): void {\n    import('three').then((three) => {\n      console.log('three loaded');\n      this.preparingGraphics = false;\n      (window as any).THREE = three;\n      import('node_modules/vanta/src/vanta.globe').then((vanta) => {\n        vanta.default({\n          el: this.vantaElement.nativeElement,\n          mouseControls: true,\n          touchControls: true,\n          gyroControls: true,\n          minHeight: 200.00,\n          minWidth: 200.00,\n          scale: 1.00,\n          scaleMobile: 1.00,\n          color: 0x7f3bb1,\n          THREE: three\n        });\n      });\n    });\n  }\n\n  ngOnInit() {\n    // import 3d graphics\n\n  }\n\n  connect() {\n    this.connectToMetamask.next();\n  }\n}\n","<div #container id=\"container\" *ngIf=\"!preparingGraphics; else spinner\">\n\n</div>\n<ng-template #spinner>\n  <div class=\"align-center centerize\">\n    <mat-spinner></mat-spinner>\n  </div>\n</ng-template>\n\n<div class=\"content\">\n  <div class=\"title\">\n    <span>GeoNFT</span>\n  </div>\n  <div class=\"metamask-button\">\n    <div class=\"location-button\">\n      <app-loading-button (click)=\"connect()\" [loading]=\"loading\">\n        <div class=\"metamask-logo\"></div>\n        <span>Connect to MetaMask</span>\n      </app-loading-button>\n    </div>\n  </div>\n\n</div>\n","import { animate, query, style, transition, trigger } from '@angular/animations';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LngLat, Map } from 'mapbox-gl';\nimport { ContractService, GeoNFT } from './services/contract.service';\nimport { ImageMarker } from './services/map-helper.service';\nimport { SidenavState, UxService } from './services/ux.service';\n@Component({\n  animations: [\n    trigger('slideOut', [\n      transition(':leave', [\n        style({ transform: 'translateY(0%)' }),\n        animate(\n          '0.5s cubic-bezier(0.32,0,1,1)',\n          style({ transform: 'translateY(-100%)' })\n        ),\n      ]),\n    ]),\n    trigger('slideUpIn', [\n      transition('* => *', [\n        query(':enter', [style({ transform: 'translateY(100%)', opacity: 0 })], {\n          optional: true\n        }),\n        query(\n          ':leave',\n          [\n            style({ transform: 'translateY(0%)', opacity: 1 }),\n            animate('200ms', style({ transform: 'translateY(100%)', opacity: 0 }))\n          ],\n          { optional: true }\n        ),\n        query(\n          ':enter',\n          [\n            style({ transform: 'transitionY(100%)', opacity: 0 }),\n            animate(\n              '200ms cubic-bezier(0.32,0,1,1)',\n              style({ transform: 'translateY(0%)', opacity: 1 })\n            )\n          ],\n          { optional: true }\n        )\n      ])\n    ]),\n  ],\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  curtain = true;\n  confirmOrder = true;\n  public SidenavState = SidenavState;\n  isMobile: boolean;\n  title = 'geo-spatia';\n  public markers: ImageMarker[];\n  public userLocation: LngLat;\n  public map: Map;\n  public confirmOrderOpened = false;\n  rightSidenavOpened: boolean;\n  leftSidenavOpened: boolean;\n  loading = false;\n  subscriptions = [];\n  nfts: GeoNFT[] = [];\n\n  constructor(\n    public uxService: UxService,\n    public dialog: MatDialog,\n    private media: MediaMatcher,\n    private contractService: ContractService,\n    private router: Router,\n    private snackBar: MatSnackBar,\n  ) {\n    // this.mobileQueryListener = () => changeDetectorRef.detectChanges();\n    // this.isMobile.addListener(this.mobileQueryListener);\n    // console.log(\"mobileSidenav: \", this.isMobile, \"mobilequerylistener: \", this.mobileQueryListener);\n  }\n  ngOnInit(): void {\n    const wasStarted = window.localStorage.getItem('wasStarted');\n    if (wasStarted) {\n      this.connectToMetamask();\n    }\n\n    this.isMobile = this.media.matchMedia('(max-width: 700px)').matches;\n    this.uxService.sidenavOpened$.subscribe((sideNavOpened) => {\n      this.rightSidenavOpened = this.isMobile\n        ? sideNavOpened.rightSidenavState === SidenavState.ACTIVE\n          ? true\n          : false\n        : sideNavOpened.rightSidenavState === SidenavState.HIDDEN ||\n          sideNavOpened.rightSidenavState === SidenavState.ACTIVE\n          ? true\n          : false;\n\n      this.leftSidenavOpened = this.isMobile\n        ? sideNavOpened.leftSidenavState === SidenavState.ACTIVE\n          ? true\n          : false\n        : sideNavOpened.leftSidenavState === SidenavState.HIDDEN ||\n          sideNavOpened.leftSidenavState === SidenavState.ACTIVE\n          ? true\n          : false;\n    });\n    this.subscriptions.push(\n      this.contractService.nfts$.subscribe((nfts) => {\n        this.nfts = nfts;\n      })\n    );\n\n\n  }\n\n\n  async connectToMetamask(): Promise<void> {\n    window.localStorage.setItem('wasStarted', 'true');\n    try {\n      this.loading = true;\n      await this.contractService.init();\n      this.subscriptions.push(\n        this.contractService.getNftsToRetrieve$()\n          .subscribe(async (nftsToRetrieve: GeoNFT[]) => {\n            if (nftsToRetrieve.length > 0) {\n              console.log('current url', this.router.url);\n              // if (this.router.url !== '/retrieve-nfts') {\n              await this.router.navigate(['/', 'retrieve-nfts']);\n\n              console.log('nftsToRetrieve', nftsToRetrieve);\n              // }\n              this.curtain = false;\n\n            } else {\n              if (this.router.url === '/') {\n                await this.router.navigate(['/', 'all-nfts']);\n              }\n              this.curtain = false;\n              setTimeout(() => {\n                this.loading = false;\n              }, 2000);\n\n            }\n          })\n      );\n\n      // convert nfts to imagemarkers\n    } catch (error) {\n      console.log('error happened');\n      this.snackBar.open(error, 'Dismiss', {\n        duration: 3000,\n        verticalPosition: 'top',\n        panelClass: ['snackbar-error'],\n      });\n      console.error(error);\n    }\n  }\n  async buyNft() {\n    this.router.navigate(['/', 'nft-bought']);\n  }\n\n}\n","<mat-drawer-container class=\"main-wrapper\">\n  <mat-drawer\n    #drawer2\n    mode=\"side\"\n    [opened]=\"leftSidenavOpened\"\n    [ngClass]=\"{\n      'example-container-left': !isMobile,\n      'example-container-mobile-left': isMobile\n    }\"\n  >\n    <app-wallet></app-wallet>\n  </mat-drawer>\n\n  <!-- Move to separate component -->\n  <app-map-gl></app-map-gl>\n  <div [@slideUpIn]=\"outletRef.isActivated ? outletRef.activatedRoute : ''\">\n    <router-outlet #outletRef=\"outlet\"></router-outlet>\n  </div>\n\n\n  <mat-drawer\n    #drawer\n    position=\"end\"\n    mode=\"side\"\n    [ngClass]=\"{\n      'example-container': !isMobile,\n      'example-container-mobile': isMobile\n    }\"\n    [opened]=\"rightSidenavOpened\"\n  >\n    <!-- Move to separate component -->\n\n    <div class=\"sidenav-open fab-close\" *ngIf=\"isMobile\">\n      <button (click)=\"uxService.closeSidenav()\" mat-icon-button>\n        <mat-icon color=\"primary\">close</mat-icon>\n      </button>\n    </div>\n    <mat-toolbar color=\"secondary\">\n      <div class=\"toolbar-label\">\n        <span class=\"toolbar-span\">NFTs Layer #1</span>\n      </div>\n    </mat-toolbar>\n    <app-nft-list [nfts]=\"nfts\"></app-nft-list>\n  </mat-drawer>\n</mat-drawer-container>\n<div class=\"curtain\" [@slideOut] *ngIf=\"curtain\">\n  <app-curtain (connectToMetamask)=\"connectToMetamask()\" [loading]=\"loading\"></app-curtain>\n</div>\n\n","import { ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription, timer } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\nimport { ContractService, GeoNFT, SoldStatus, TransactionResultEvent } from '../services/contract.service';\nimport { MapHelperService } from '../services/map-helper.service';\n@Component({\n  templateUrl: './single-nft.component.html',\n  styleUrls: ['./single-nft.component.scss'],\n})\nexport class SingleNftComponent implements OnInit, OnDestroy {\n  timeLeft: Date;\n  Math = Math;\n  public nft: GeoNFT;\n  subscriptions: Subscription[] = [];\n  SoldStatus = SoldStatus;\n  buying = false;\n  highestBid: string;\n  endedPercent: number;\n  latestBidIsOwn: boolean;\n  resaling = false;\n  newBid = -1;\n  resalePrice = 0.1;\n  minPrice = 0;\n  resaleForm = {\n    resalePrice: 0,\n    resaleDate: new Date(Date.now())\n  };\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    public contractService: ContractService,\n    private mapHelperService: MapHelperService,\n    private changeDetector: ChangeDetectorRef\n  ) { }\n  ngOnInit(): void {\n    this.subscriptions.push(\n      this.activatedRoute.params.pipe(\n        switchMap((param) => this.contractService.getNftById$(Number(param.id))),\n        tap(x => console.log('nft', x))\n      ).subscribe((nft: GeoNFT) => {\n\n        this.nft = nft;\n        if (!this.nft) {\n          this.router.navigate(['/', 'all-nfts']);\n          return;\n        }\n        console.log(nft);\n        this.minPrice = this.getMinPrice();\n        this.mapHelperService.setSingleMarker(nft);\n        this.calculateTimeLeft();\n        this.latestBidIsOwn = nft.bidInfo && nft.bidInfo.bidderAddress.toLowerCase() === this.contractService.selectedAddress.toLowerCase();\n\n        this.changeDetector.detectChanges();\n      })\n    );\n\n\n  }\n\n  calculateTimeLeft(): void {\n    console.log('single-nft sale time', this.nft.saleTime);\n    if (Math.max(this.nft.saleTime.getTime() - Date.now(), 0) === 0) {\n      this.timeLeft = null;\n    } else {\n      this.timeLeft = new Date(Math.max(this.nft.saleTime.getTime() - Date.now(), 0));\n    }\n    console.log(this.timeLeft);\n    this.subscriptions.push(\n      timer(1000, 1000).subscribe(() => {\n        if (this.timeLeft) {\n          this.timeLeft = new Date(this.timeLeft.getTime() - 1000);\n          const timeFromCreated = this.nft.saleTime.getTime() - Date.now();\n          this.endedPercent = (100 - (timeFromCreated / (this.nft.saleTime.getTime() - this.nft.creationTime.getTime())) * 100);\n          this.changeDetector.detectChanges();\n        }\n      })\n    );\n  }\n\n  submitBid(): void {\n    console.log('new bid', this.newBid);\n    if (this.nft.resaleId) {\n      this.contractService.bidResale(this.nft.resaleId, String(this.nft.id), this.contractService.oneToWei(String(this.newBid)));\n    } else {\n      this.contractService.bidNFT(this.nft.id, this.contractService.oneToWei(String(this.newBid)));\n    }\n    this.buying = true;\n\n    this.handleTransaction();\n\n  }\n\n  resalePriceChanged(newPrice): void {\n    this.resaleForm.resalePrice = newPrice;\n    this.newBid = newPrice;\n  }\n\n  resaleDateSelected($event): void {\n    this.resaleForm.resaleDate = $event;\n  }\n\n  submitResale(): void {\n    this.resaling = true;\n    this.contractService.resaleNft(\n      this.contractService.oneToWei(String(this.resaleForm.resalePrice)),\n      String(this.nft.id), this.resaleForm.resaleDate.getTime());\n    // listen to transactions$ to change view\n    this.handleTransaction();\n  }\n\n\n\n  getMinPrice(): number {\n    if (!this.nft) {\n      return null;\n    }\n    const price = this.nft.bidInfo ? (this.nft.bidInfo.highestBid ) : (this.nft?.price);\n    return Number(this.contractService.weiToOne(price));\n  }\n\n  bidChanged(newBid: number): void {\n    this.newBid = newBid;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((sub: Subscription) => {\n      sub.unsubscribe();\n    });\n  }\n\n  private handleTransaction(): void {\n    this.subscriptions.push(\n      this.contractService.transactions$.subscribe((transactionEvent: TransactionResultEvent) => {\n        if (transactionEvent && transactionEvent.success !== undefined) {\n          this.router.navigate(['/', 'transaction-result'], { state: { ...{ closable: true }, ...transactionEvent } });\n        }\n      }, (err) => {\n        this.router.navigate(['/', 'transaction-result'], { state: { success: false, closable: true } });\n      })\n    );\n  }\n}\n\n","<div *ngIf=\"nft\" [ngClass]=\"{'main-container-small': !SoldStatus.RESALE || !nft.owner && (nft.status === 0 || !timeLeft), 'main-container-big': SoldStatus.RESALE }\">\n  <div class=\"main-container-inner\">\n    <div class=\"top-wrapper\">\n      <div class=\"top-label\">\n        <span> Checkout </span>\n      </div>\n      <div class=\"close-wrapper\">\n        <button mat-icon-button [routerLink]=\"['/', 'all-nfts']\">\n          <mat-icon color=\"primary\">close</mat-icon>\n        </button>\n      </div>\n    </div>\n  \n    <div class=\"progress\" *ngIf=\"timeLeft\">\n      <mat-progress-bar\n        mode=\"determinate\"\n        [value]=\"endedPercent\"\n      ></mat-progress-bar>\n  \n      <div class=\"time\">\n        <span>Time left:</span>\n        <span>\n          {{ Math.floor(timeLeft?.getTime() / (1000 * 60 * 60 * 24)) }} days\n        </span>\n        <span>\n          {{ timeLeft?.getUTCHours() }}h : {{ timeLeft | date: \"mm\" }}m :\n          {{ timeLeft | date: \"ss\" }}s</span\n        >\n      </div>\n    </div>\n  \n    <div class=\"nft-name\" *ngIf=\"nft\">\n      <button mat-fab viewBox=\"0 0 300 300\" [innerHTML]=\"nft.image\"></button>\n  \n      <div class=\"description\">\n        <div class=\"nft-name-2\">\n          <span>{{ nft.name }}</span>\n        </div>\n        <div class=\"price\">\n          <span class=\"mat-h3\"\n            >{{\n              minPrice\n            }}\n            ONE</span\n          >\n        </div>\n      </div>\n    </div>\n    <div\n      *ngIf=\"nft && !nft.owner && nft.bidInfo && nft.bidInfo.bidderAddress.toLowerCase() === contractService.selectedAddress.toLowerCase()\"\n      class=\"highest-label\"\n    >\n      <span> Your bet is the highest </span>\n    </div>\n  \n    <div *ngIf=\"nft.owner\" class=\"highest-label\">\n      <span> You are the owner of this NFT </span>\n    </div>\n    <div *ngIf=\"!nft.owner\" class=\"highest-label\">\n      <span> {{ nft.ownerAddress }} </span>\n    </div>\n    <div class=\"bid-wrapper\" *ngIf=\"!(!nft.owner && (nft.status === 0 || !timeLeft)) && !latestBidIsOwn && !nft.resaleId\">\n      <div class=\"bid-label\">\n        <span> Put your price </span>\n      </div>\n      <div class=\"price-picker\">\n        <app-price-picker\n          (bidChanged)=\"bidChanged($event)\"\n          [minPrice]=\"minPrice\n          \"\n        ></app-price-picker>\n      </div>\n    </div>\n    <div  *ngIf=\"nft.owner || nft.resaleId\">\n      <div class=\"resale-wrapper\">\n        <div class=\"bid-label\">\n          <span> Put your price </span>\n        </div>\n        <div class=\"price-picker\">\n          <app-price-picker\n            (bidChanged)=\"resalePriceChanged($event)\"\n            [minPrice]=\"\n            minPrice\n            \"\n          ></app-price-picker>\n        </div>\n      </div>\n      <div class=\"resale-wrapper\" *ngIf=\"nft.owner\">\n        <div class=\"bid-label\">\n          <span> Expiration date </span>\n        </div>\n        <div class=\"date-picker\">\n          <app-date-picker (dateSelected)=\"resaleDateSelected($event)\"></app-date-picker>\n        </div>\n      </div>\n    </div>\n    <div class=\"buy-button\">\n      <app-loading-button\n        *ngIf=\"!nft.owner && !(!nft.owner && (nft.status === 0 || !timeLeft)) && !latestBidIsOwn\"\n        (click)=\"submitBid()\"\n        [loading]=\"buying\"\n      >\n        <mat-icon>shopping_basket</mat-icon>\n        <span class=\"button-label\"> Bid </span>\n      </app-loading-button>\n      <app-loading-button\n        color=\"accent\"\n        *ngIf=\"nft.owner && nft.status !== 3\"\n        (click)=\"submitResale()\"\n        [loading]=\"resaling\"\n      >\n        <mat-icon>shopping_basket</mat-icon>\n        <span class=\"button-label\"> Resale </span>\n      </app-loading-button>\n    </div>\n  \n    <div class=\"sold\" *ngIf=\"!nft.owner && (nft.status === 0 || !timeLeft)\">\n      <span>\n        {{ nft.owner ? \"Owned\" : \"Sold\" }}\n      </span>\n    </div>\n  </div>\n  \n</div>\n","import { PriceConverterService } from './services/price-converter.service';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MapService, NgxMapboxGLModule } from 'ngx-mapbox-gl';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SingleNftComponent } from './single-nft/single-nft.component';\nimport { CurtainComponent } from './curtain/curtain.component';\nimport { DialogComponent } from './dialog/dialog.component';\nimport { MapGlComponent } from './map-gl/map-gl.component';\nimport { NftListComponent } from './nft-list/nft-list.component';\nimport { ShortAddressPipe } from './pipes/short-address.pipe';\nimport { ContractService } from './services/contract.service';\nimport { DeviceDetectorService } from './services/device-detector.service';\nimport { GeolocationService } from './services/geolocation-service.service';\nimport { SVGGeneratorService } from './services/svggenerator.service';\nimport { StartComponent } from './start/start.component';\nimport { WalletComponent } from './wallet/wallet.component';\nimport { TransactionResultComponent } from './transaction-result/transaction-result.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { WeiToOnePipe } from './pipes/wei-to-one.pipe';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { AllNFTsComponent } from './all-nfts/all-nfts.component';\nimport { LoadingButtonComponent } from './ux-components/loading-button/loading-button.component';\nimport { NftMarkerComponent } from './ux-components/nft-marker/nft-marker.component';\nimport { SellComponent } from './sell/sell.component';\nimport { ButtonComponent } from './ux-components/button/button.component';\nimport { NftListItemComponent } from './ux-components/nft-list-item/nft-list-item.component';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { FormsModule } from '@angular/forms';\nimport { PricePickerComponent } from './ux-components/price-picker/price-picker.component';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { NftGridComponent } from './ux-components/nft-grid/nft-grid.component';\nimport { NftGridItemComponent } from './ux-components/nft-grid-item/nft-grid-item.component';\nimport { RetrieveNftsComponent } from './retrieve-nfts/retrieve-nfts.component';\nimport { RouteLockGuard } from './services/guards/route-lock.guard';\nimport { DatePickerComponent } from './ux-components/date-picker/date-picker.component';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { NgxMatDatetimePickerModule, NgxMatNativeDateModule, NgxMatTimepickerModule } from '@angular-material-components/datetime-picker';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DialogComponent,\n    MapGlComponent,\n    SingleNftComponent,\n    StartComponent,\n    AllNFTsComponent,\n    NftListComponent,\n    WalletComponent,\n    ShortAddressPipe,\n    CurtainComponent,\n    TransactionResultComponent,\n    WeiToOnePipe,\n    LoadingButtonComponent,\n    NftMarkerComponent,\n    SellComponent,\n    ButtonComponent,\n    NftListItemComponent,\n    PricePickerComponent,\n    NftGridComponent,\n    NftGridItemComponent,\n    RetrieveNftsComponent,\n    DatePickerComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    MatSidenavModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatTabsModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatListModule,\n    MatChipsModule,\n    MatSnackBarModule,\n    MatButtonToggleModule,\n    MatProgressBarModule,\n    NgxMapboxGLModule.withConfig({\n      accessToken:\n        'pk.eyJ1IjoidGhlY3liZXJkM20wbiIsImEiOiJja2FpcnNyeXowM21tMndwamxyZjU5ajJpIn0.TjWqQxlCdOZmoVFLFJBRsA', // Optional, can also be set per map (accessToken input of mgl-map)\n    }),\n    MatProgressSpinnerModule,\n    MatSlideToggleModule,\n    FormsModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    NgxMatNativeDateModule,\n    NgxMatTimepickerModule,\n\n  ],\n  providers: [\n    GeolocationService,\n    MapService,\n    SVGGeneratorService,\n    ContractService,\n    DeviceDetectorService,\n    PriceConverterService,\n    RouteLockGuard\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","\n<div class=\"container\" *ngFor=\"let nft of nfts\">\n  <app-nft-grid-item *ngIf=\"nft\" [nftId]=\"nft.id\"></app-nft-grid-item>\n\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { ContractService, GeoNFT } from 'src/app/services/contract.service';\n\n@Component({\n  selector: 'app-nft-grid',\n  templateUrl: './nft-grid.component.html',\n  styleUrls: ['./nft-grid.component.scss']\n})\nexport class NftGridComponent implements OnInit {\n  @Input()\n  nfts: GeoNFT[];\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n  openNft() {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss'],\n})\nexport class DialogComponent implements OnInit {\n  constructor(private snackBar: MatSnackBar) {}\n  ngOnInit(): void {}\n  openSnackBar() {\n    this.snackBar.open('Address copied', 'Dismiss', {\n        duration: 3000\n    });\n  }\n}\n","<div class=\"header\">\n  <span class=\"mat-h2\"> Your wallet </span>\n  <button mat-icon-button mat-dialog-close>\n    <mat-icon>close</mat-icon>\n  </button>\n</div>\n<div class=\"wallet\">\n  <span class=\"mat-h4\">\n    6Tgdf6fDHDbh7GhBF7YGVGGHVGVgghjtfrfg77YFGBui78TFd4R4FEdE2g\n  </span>\n</div>\n<div class=\"buttons\">\n  <button mat-button color=\"secondary\">\n    <span> View on BscScan </span>\n    <mat-icon>open_in_new</mat-icon>\n  </button>\n  <button mat-button color=\"secondary\" (click)=\"openSnackBar()\">\n    <span> Copy address </span>\n    <mat-icon><mat-icon>file_copy</mat-icon></mat-icon>\n  </button>\n</div>\n<div class=\"logout\">\n  <button mat-raised-button color=\"primary\">\n    <span> Logout </span>\n  </button>\n</div>","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ButtonComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>button works!</p>\n","import { ContractService } from './../services/contract.service';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'weiToOne' })\nexport class WeiToOnePipe implements PipeTransform {\n  constructor(private contractService: ContractService) {}\n  transform(value: string, ...args: any[]) {\n    return Number(this.contractService.weiToOne(value));\n  }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ComponentFactoryResolver, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { Subscription, timer } from 'rxjs';\nimport { BidInfo, BidViewModel, ContractService, GeoNFT, SoldStatus } from 'src/app/services/contract.service';\n\n@Component({\n  selector: 'app-nft-list-item',\n  templateUrl: './nft-list-item.component.html',\n  styleUrls: ['./nft-list-item.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NftListItemComponent implements OnInit, OnDestroy {\n  @Input()\n  nftId: number;\n  nft: GeoNFT;\n  timeLeft: Date;\n  subscriptions = [];\n  endedPercent: number;\n  Math = Math;\n  SoldStatus = SoldStatus;\n  bidsViewModel: BidViewModel;\n  passed = false;\n  hasHighestBid = false;\n  latestBidIsOwn = false;\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    public contractService: ContractService\n  ) { }\n\n  ngOnInit(): void {\n    // this.contractService.getNftById\n    this.subscriptions.push(\n      timer(1000, 1000).subscribe(() => {\n        if (this.timeLeft && this.timeLeft.getTime() > 1000) {\n          this.timeLeft = new Date(this.timeLeft.getTime() - 1000);\n          const timeFromCreated = this.nft.saleTime.getTime() - Date.now();\n          this.endedPercent = (100 - (timeFromCreated / (this.nft.saleTime.getTime() - this.nft.creationTime.getTime())) * 100);\n          this.changeDetector.detectChanges();\n        } else {\n          this.timePassed();\n        }\n      })\n    );\n    this.subscriptions.push(\n      this.contractService.getNftById$(this.nftId).subscribe((nft) => {\n        this.nft = nft;\n        this.calculateTimeLeft();\n        this.latestBidIsOwn = nft.bidInfo && nft.bidInfo.bidderAddress.toLowerCase() === this.contractService.selectedAddress.toLowerCase();\n        this.changeDetector.detectChanges();\n      })\n    );\n\n  }\n\n  calculateTimeLeft(): void {\n    if (this.nft.saleTime.getTime() < Date.now()) {\n      this.timeLeft = null;\n    } else {\n      this.timeLeft = new Date(Math.max(this.nft.saleTime.getTime() - Date.now(), 0));\n    }\n    if (this.timeLeft) {\n\n    }\n\n  }\n\n  isAddressOwn(address: string): boolean {\n    if (!this.contractService.selectedAddress || !address) {\n      return false;\n    }\n    return this.contractService.selectedAddress?.toLowerCase() === address.toLowerCase();\n  }\n\n  timePassed(): void {\n    if (!this.passed) {\n      this.passed = true;\n      setTimeout(() => {\n        this.contractService.refresh();\n      }, 1000);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((sub: Subscription) => {\n      sub.unsubscribe();\n    });\n  }\n}\n","\n  <div class=\"progress\" *ngIf=\"timeLeft\">\n    <mat-progress-bar\n      mode=\"determinate\"\n      [color]=\"nft.status === SoldStatus.RESALE ? 'accent' : 'primary'\"\n      [value]=\"endedPercent\"\n    ></mat-progress-bar>\n\n    <div class=\"time\">\n      <span [ngClass]=\"nft.status === SoldStatus.RESALE ? 'accent' : 'primary'\"\n        >Time left:</span\n      >\n      <span [ngClass]=\"nft.status === SoldStatus.RESALE ? 'accent' : 'primary'\">\n        {{ Math.floor(timeLeft.getTime() / (1000 * 60 * 60 * 24)) }} days\n      </span>\n      <span [ngClass]=\"nft.status === SoldStatus.RESALE ? 'accent' : 'primary'\">\n        {{ timeLeft.getUTCHours() }}h : {{ timeLeft | date: \"mm\" }}m :\n        {{ timeLeft | date: \"ss\" }}s</span\n      >\n    </div>\n  </div>\n\n  <div class=\"main-container\">\n    <div\n      class=\"nft-image\"\n      [ngClass]=\"[\n        !nft.owner && (nft.status === 0 || !timeLeft) && !nft.resaleId\n          ? 'grayscale'\n          : ''\n      ]\"\n    >\n      <button\n        mat-fab\n        class=\"nft-svg\"\n        preserveAspectRatio=\"none\"\n        viewBox=\"0 0 300 300\"\n        [innerHTML]=\"nft?.image\"\n      ></button>\n    </div>\n    <div class=\"item-description\">\n      <div class=\"section-one\">\n        <div class=\"name\">\n          <span>\n            {{ nft?.name }}\n          </span>\n        </div>\n        <mat-chip-list aria-label=\"labels\">\n          <mat-chip disableRipple color=\"primary\" selected>\n            {{\n              nft.bidInfo\n                ? (nft.bidInfo.highestBid | weiToOne: 4)\n                : (nft?.price | weiToOne: 4)\n            }}\n            ONE</mat-chip\n          >\n          <mat-chip disableRipple *ngIf=\"nft.owner\" color=\"accent\" selected\n            >Owned</mat-chip\n          >\n          <mat-chip\n            color=\"accent\"\n            *ngIf=\"\n              !nft.owner &&\n              nft.status === 1 &&\n              !nft.hasUserBids &&\n              timeLeft &&\n              !bidsViewModel?.outBidden\n            \"\n            selected\n            >On sale</mat-chip\n          >\n          <mat-chip color=\"accent\" *ngIf=\"nft.status === 3\" selected\n            >Resale</mat-chip\n          >\n\n          <mat-chip\n            *ngIf=\"\n              nft.hasUserBids &&\n              nft.bidInfo &&\n              nft.bidInfo.bidderAddress.toLowerCase() ===\n                contractService.selectedAddress.toLowerCase() &&\n              !nft.owner\n            \"\n            color=\"accent\"\n            selected\n            >Highest Bid</mat-chip\n          >\n          <mat-chip\n            *ngIf=\"\n              nft.bidInfo &&\n              nft.bidInfo.bidderAddress.toLowerCase() !==\n                contractService.selectedAddress.toLowerCase() &&\n              nft.hasUserBids &&\n              !nft.ownerAddress\n            \"\n            color=\"warn\"\n            selected\n            >Outbidden</mat-chip\n          >\n          <mat-chip\n            *ngIf=\"\n              !nft.owner && (nft.status === 0 || !timeLeft) && !nft.resaleId\n            \"\n            color=\"primary\"\n            selectable\n            >Sold</mat-chip\n          >\n        </mat-chip-list>\n      </div>\n\n      <div class=\"second-section\">\n        <div class=\"progress-spinner\"></div>\n\n        <button\n          *ngIf=\"nft?.status === 1 && !latestBidIsOwn && timeLeft\"\n          disableRipple\n          mat-raised-button\n          color=\"primary\"\n        >\n          <mat-icon>shopping_basket</mat-icon>\n          Bid\n        </button>\n        <!-- <button *ngIf=\"nft?.owner\" disableRipple mat-raised-button color=\"warn\">\n        Sell\n      </button> -->\n      </div>\n    </div>\n  </div>\n","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-date-picker',\n  templateUrl: './date-picker.component.html',\n  styleUrls: ['./date-picker.component.scss']\n})\nexport class DatePickerComponent implements OnInit {\n  calendarOpened = false;\n  selectedDate: Date;\n  currentDate = new Date(Date.now());\n  currentTime = this.currentDate;\n  @Output()\n  dateSelected = new EventEmitter<Date>();\n  @ViewChild('picker') picker: any;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onDateSelected(event): void {\n    this.selectedDate = event;\n    this.calendarOpened = false;\n    this.dateSelected.next(this.selectedDate);\n  }\n\n  timeChanged(event: Date): void {\n    console.log(event);\n    const hours = event.getHours();\n    const minutes = event.getMinutes();\n    this.currentDate.setHours(hours);\n    this.currentDate.setMinutes(minutes);\n    console.log(this.currentDate.getTime());\n  }\n\n}\n","<div class=\"date-picker\">\n  <div class=\"date-time-picker\">\n    <mat-calendar\n      (selectedChange)=\"onDateSelected($event)\"\n      *ngIf=\"calendarOpened\"\n    ></mat-calendar>\n    <ngx-mat-timepicker\n      ngDefaultControl\n      [hidden]=\"!calendarOpened\"\n      [showSpinners]=\"true\"\n      [showSeconds]=\"false\"\n      [(ngModel)]=\"currentTime\"\n      (ngModelChange)=\"timeChanged($event)\"\n    >\n    </ngx-mat-timepicker>\n  </div>\n  <mat-button-toggle-group name=\"fontStyle\" aria-label=\"Font Style\">\n    <mat-button-toggle\n      class=\"middle\"\n      (click)=\"calendarOpened = !calendarOpened\"\n      value=\"italic\"\n      >{{ selectedDate || currentDate | date }}</mat-button-toggle\n    >\n    <mat-button-toggle\n      class=\"toggle\"\n      (click)=\"calendarOpened = !calendarOpened\"\n      color=\"primary\"\n      value=\"bold\"\n      ><mat-icon>calendar_today</mat-icon>\n    </mat-button-toggle>\n  </mat-button-toggle-group>\n</div>\n","<div class=\"top-wrapper\">\n    <div class=\"top-label\">\n      <span>\n        Sell\n      </span>\n    </div>\n    <div class=\"close-wrapper\">\n      <button mat-icon-button [routerLink]=\"['/', 'all-nfts']\">\n        <mat-icon color=\"primary\">close</mat-icon>\n      </button>\n    </div>\n  </div>\n  <div class=\"divider-wrapper\">\n    <div class=\"divider\"></div>\n  </div>\n  \n  \n  <div class=\"nft-name\" *ngIf=\"nft\">\n    <button mat-fab\n      viewBox=\"0 0 300 300\"\n      [innerHTML]=\"nft.image\"\n    ></button>\n  \n    <div class=\"description\">\n      <div class=\"nft-name\">\n        <span >{{ nft.name }}</span>\n      </div>\n      <div class=\"price\">\n        <span class=\"mat-h3\">{{ nft.price | weiToOne }} ONE</span>\n      </div>\n    </div>\n  </div>\n  <div class=\"buy-button\" *ngIf=\"nft.status === 1\">\n    <app-loading-button (click)=\"placeOrder()\" [loading]=\"buying\">\n      <mat-icon>shopping_basket</mat-icon>\n      <span class=\"button-label\"> Buy </span>\n    </app-loading-button>\n  </div>\n  <div class=\"price-picker\">\n    <app-price-picker></app-price-picker>\n  </div>\n  <div class=\"sold\" *ngIf=\"nft.status === 0\">\n    <span>\n      {{ nft.owner ? 'Owned' : 'Sold'}}\n    </span>\n  </div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ContractService, GeoNFT } from '../services/contract.service';\n\n@Component({\n  templateUrl: './sell.component.html',\n  styleUrls: ['./sell.component.scss']\n})\nexport class SellComponent implements OnInit, OnDestroy {\n  subscriptions = [];\n  nft: GeoNFT;\n  buying = false;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private contractService: ContractService\n  ) { }\n  ngOnInit(): void {\n    this.subscriptions.push(this.activatedRoute.params.subscribe((params: Params) => {\n      const tokenId = params.id;\n      const nft = this.contractService.getNftById(tokenId);\n\n      console.log('load', tokenId);\n    }));\n  }\n\n  placeOrder() {\n\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((sub: Subscription) => {\n      sub.unsubscribe();\n    });\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'shortAddress'})\nexport class ShortAddressPipe implements PipeTransform {\n  transform(value: string, ...args: any[]) {\n    return value ? `${value.substring(0, 4)}...${value.substr(value.length - 4)}` : '';\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { LngLat, LngLatLike } from 'mapbox-gl';\n\nexport interface ILocation {\n  lng: number;\n  lat: number;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GeolocationService {\n  public allowed = false;\n  private options = {\n    enableHighAccuracy: true,\n    timeout: 5000,\n    maximumAge: 0,\n  };\n  public randomizedLocations: LngLat[];\n\n  constructor() {}\n  public askPermission() {\n    return new Promise((resolve, reject) => {\n      if (window.isSecureContext && 'geolocation' in navigator) {\n        navigator.permissions\n          .query({ name: 'geolocation' })\n          .then((permissionStatus) => {\n            if ('granted' === permissionStatus.state) {\n              this.allowed = true;\n              resolve(true);\n            }\n          });\n      } else {\n        reject('Geolocation not supported');\n      }\n    });\n  }\n\n  public getCurrentLocation(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(\n        (pos) => {\n          const crd = pos.coords;\n\n          console.log(`Latitude : ${crd.latitude}`);\n          console.log(`Longitude: ${crd.longitude}`);\n          console.log(`More or less ${crd.accuracy} meters.`);\n          resolve(crd);\n        },\n        (err) => {\n          console.warn(`ERROR(${err.code}): ${err.message}`);\n          reject(err);\n        },\n        this.options\n      );\n    });\n  }\n\n  randomizeLocations(latLng: ILocation, count, range) {\n    this.randomizedLocations = new Array(count).fill(0).map((value) => {\n      return new LngLat(\n        Math.random() * (latLng.lng + range - (latLng.lng - range)) +\n          (latLng.lng - range),\n        Math.random() * (latLng.lat + range - (latLng.lat - range)) +\n          (latLng.lat - range)\n      );\n    });\n  }\n  // public getRandomLocations(\n  //   latLng: ILocation,\n  //   count,\n  //   range\n  // ): LngLat[] {\n\n  // }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-transaction-result',\n  templateUrl: './transaction-result.component.html',\n  styleUrls: ['./transaction-result.component.scss'],\n  animations: [\n    trigger('disableButton', [\n      state('true', style({ width: '*' })),\n      state('false', style({ width: '20px' })),\n      transition('false <=> true', animate('500ms cubic-bezier(0.32,0,1,1)')),\n    ]),\n  ],\n})\nexport class TransactionResultComponent implements OnInit {\n  success = this.router.getCurrentNavigation().extras.state.success;\n  closable = this.router.getCurrentNavigation().extras.state.closable;\n  constructor(\n    private router: Router,\n    private location: Location\n    ) {}\n\n  ngOnInit(): void {\n  }\n\n  close(): void {\n    if (this.success && this.closable) {\n      this.router.navigate(['/', 'all-nfts']);\n    } else {\n      this.location.back();\n    }\n  }\n}\n","<div class=\"container\">\n    <div class=\"close-wrapper\">\n        <button mat-icon-button (click)=\"close()\">\n          <mat-icon color=\"primary\">close</mat-icon>\n        </button>\n      </div>\n    <div class=\"inner-wrapper\">\n      <div class=\"bottom-icon\">\n        <mat-icon class=\"success-icon\" *ngIf=\"success\">check_circle</mat-icon>\n        <mat-icon *ngIf=\"!success\" class=\"error-icon\">error</mat-icon>\n      </div>\n      <div class=\"label\">\n        <span *ngIf=\"success\">Success!</span>\n        <span *ngIf=\"!success\">Something went wrong :(</span>\n      </div>\n\n\n\n    </div>\n\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\ninterface PriceResponse {\n  symbol: string;\n  price: string;\n}\n@Injectable()\nexport class PriceConverterService {\n  constructor(private httpClient: HttpClient) {}\n\n  convertOneToUSDT(priceInOne: number): Observable<number> {\n    return this.httpClient\n      .get<PriceResponse>(\n        'https://api.binance.com/api/v3/ticker/price?symbol=ONEUSDT'\n      )\n      .pipe(\n        map((priceResponse: PriceResponse) => {\n          return priceInOne * Number(priceResponse.price);\n        }),\n        shareReplay(1)\n      );\n  }\n}\n","import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { GeoNFT, SoldStatus } from 'src/app/services/contract.service';\n\nexport enum NftUxState {\n  AVAILABLE, OWNEDBYME, OWNEDBYSOMEBODY\n}\n\n@Component({\n  selector: 'app-nft-marker',\n  templateUrl: './nft-marker.component.html',\n  styleUrls: ['./nft-marker.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NftMarkerComponent implements OnInit {\n  @Input()\n  nft: GeoNFT;\n  @Input()\n  focused: boolean;\n  SoldStatus = SoldStatus;\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n\n  }\n\n  openNft(): void {\n    this.router.navigate(['/', 'single-nft', this.nft.id]);\n  }\n\n}\n","<div\n  (click)=\"openNft()\"\n  [ngStyle]=\"{\n    height: focused ? '72px' : '48px',\n    width: focused ? '72px' : '48px'\n  }\"\n  [ngClass]=\"\n    nft.owner ? 'owned' : nft.ownerAddress ? 'ownedByOther' : 'available'\n  \"\n  class=\"circle\"\n>\n  <div\n    class=\"svg-icon\"\n    [ngStyle]=\"{\n      height: focused ? '52px' : '32px',\n      width: focused ? '52px' : '32px'\n    }\"\n    [ngClass]=\"{\n      bounce: nft.status === SoldStatus.AVAILABLE && !focused,\n      rotate: focused && !nft.owner\n    }\"\n    [innerHTML]=\"nft.image\"\n  ></div>\n</div>\n<span\n  class=\"label\"\n  [ngClass]=\"\n    nft.owner ? 'owned' : nft.ownerAddress ? 'ownedByOther' : 'available'\n  \"\n  >{{ nft?.price | weiToOne: 4 }} ONE</span\n>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport enum SidenavState {\n  DISABLED,\n  HIDDEN,\n  ACTIVE,\n}\n\nexport interface SidenavsState {\n  leftSidenavState: SidenavState;\n  rightSidenavState: SidenavState;\n}\n@Injectable({\n  providedIn: 'root',\n})\nexport class UxService {\n  private sidenavOpenedSubject = new BehaviorSubject<SidenavsState>({\n    leftSidenavState: SidenavState.DISABLED,\n    rightSidenavState: SidenavState.DISABLED,\n  });\n  sidenavOpened$ = this.sidenavOpenedSubject.asObservable();\n  routeLock = false;\n\n  openSidenav() {\n    this.sidenavOpenedSubject.next({\n      rightSidenavState: SidenavState.ACTIVE,\n      leftSidenavState: this.sidenavOpenedSubject.getValue().leftSidenavState,\n    });\n  }\n\n  openLeftSidenav() {\n    this.sidenavOpenedSubject.next({\n      rightSidenavState: this.sidenavOpenedSubject.getValue().rightSidenavState,\n      leftSidenavState: SidenavState.ACTIVE,\n    });\n  }\n\n  closeSidenav() {\n    this.sidenavOpenedSubject.next({\n      rightSidenavState: SidenavState.HIDDEN,\n      leftSidenavState: this.sidenavOpenedSubject.getValue().leftSidenavState,\n    });\n  }\n  closeLeftSidenav() {\n    this.sidenavOpenedSubject.next({\n      rightSidenavState: this.sidenavOpenedSubject.getValue().rightSidenavState,\n      leftSidenavState: SidenavState.HIDDEN,\n    });\n  }\n  enableSidenav() {\n    this.sidenavOpenedSubject.next({\n      rightSidenavState: SidenavState.HIDDEN,\n      leftSidenavState: this.sidenavOpenedSubject.getValue().leftSidenavState,\n    });\n  }\n  enableLeftSidenav() {\n    this.sidenavOpenedSubject.next({\n      rightSidenavState: this.sidenavOpenedSubject.getValue().rightSidenavState,\n      leftSidenavState: SidenavState.HIDDEN,\n    });\n  }\n\n  disableSidenav() {\n    this.sidenavOpenedSubject.next({\n      rightSidenavState: SidenavState.DISABLED,\n      leftSidenavState: this.sidenavOpenedSubject.getValue().leftSidenavState,\n    });\n  }\n  disableLeftSidenav() {\n    this.sidenavOpenedSubject.next({\n      rightSidenavState: this.sidenavOpenedSubject.getValue().rightSidenavState,\n      leftSidenavState: SidenavState.DISABLED,\n    });\n  }\n}\n","import {\n  Component,\n  Input,\n  OnChanges,\n  OnDestroy,\n  QueryList,\n  SimpleChanges,\n  ViewChildren,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LngLat, LngLatBounds, Map } from 'mapbox-gl';\nimport { MarkerComponent } from 'ngx-mapbox-gl/lib/marker/marker.component';\nimport { fromEvent, Subscription, timer } from 'rxjs';\nimport { debounce } from 'rxjs/operators';\nimport { GeoNFT } from '../services/contract.service';\nimport { ImageMarker } from '../services/map-helper.service';\nimport { NftUxState } from '../ux-components/nft-marker/nft-marker.component';\nimport {\n  CameraState,\n  MapHelperService,\n  MapStatus,\n} from './../services/map-helper.service';\n\n@Component({\n  selector: 'app-map-gl',\n  templateUrl: './map-gl.component.html',\n  styleUrls: ['./map-gl.component.scss'],\n})\nexport class MapGlComponent implements OnChanges, OnDestroy {\n  nfts: GeoNFT[] = [];\n  @Input()\n  userLocation: LngLat = null;\n  public bounds: LngLatBounds;\n  public map: Map;\n  public mapStatus: MapStatus;\n  subscription = [];\n  level = 1;\n  CameraState = CameraState;\n  NftUxState = NftUxState;\n  @ViewChildren('markers') public markerViews: QueryList<MarkerComponent>;\n  constructor(\n    private mapHelperService: MapHelperService,\n    private router: Router\n  ) { }\n\n\n  private setEvents(): void {\n    const source = fromEvent(this.map, 'zoom');\n    this.subscription.push(source.pipe(debounce(() => timer(500))).subscribe(() => {\n      if (this.mapStatus.markers && this.mapStatus.cameraState !== CameraState.SINGLE) {\n        this.nfts = this.mapStatus.markers.filter((marker) => {\n          return Math.max(Math.floor(this.map.getZoom()), 1) === marker.layer;\n        });\n      }\n    }));\n  }\n\n  private setCamera(): void {\n    switch (this.mapStatus.cameraState) {\n      case CameraState.NEARBY:\n        this.bounds = new LngLatBounds();\n        this.mapStatus.markers.forEach((marker) => {\n          this.bounds.extend(marker.location);\n        });\n        this.bounds.extend(this.mapStatus.userLocation);\n        if (this.map) {\n          this.map.fitBounds(this.bounds, { zoom: 1 });\n        }\n        break;\n      case CameraState.IDLE:\n\n        if (this.map && this.mapStatus.markers) {\n          this.bounds = new LngLatBounds();\n          this.mapStatus.markers.forEach((marker) => {\n            this.bounds.extend(marker.location);\n          });\n          if (this.map && !this.bounds.isEmpty()) {\n            this.map.fitBounds(this.bounds, {\n              zoom: 1,\n              bearing: 0,\n              pitch: 0,\n              offset: [-400, 1],\n            });\n          }\n        }\n        break;\n      case CameraState.SINGLE:\n        if (!this.mapStatus.markers) {\n          return;\n        }\n        const coords = this.mapStatus.markers[0].location;\n        this.map.flyTo({\n          center: coords,\n          essential: true,\n          pitch: 60,\n          zoom: 10,\n          offset: [-400, -60]\n        });\n        break;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.bounds = new LngLatBounds();\n\n    if (changes.markers.currentValue) {\n\n      this.map.fitBounds(this.bounds, { padding: 50 });\n    }\n  }\n\n  onMapLoaded($event): void {\n    this.map = $event;\n    this.setEvents();\n    this.mapHelperService.mapStatus$.subscribe((mapState) => {\n      this.mapStatus = mapState;\n      // apply status\n      this.nfts = mapState.markers;\n      this.setCamera();\n      if (mapState.changeCameraState) {\n      }\n    });\n  }\n\n  markerClicked(marker: ImageMarker): void {\n    this.router.navigate(['single-nft', marker.id]);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.forEach((sub: Subscription) => {\n      sub.unsubscribe();\n    });\n  }\n}\n","<mgl-map\n  [style]=\"'mapbox://styles/randymarsh2137/ckqnwzq4d14x718quh7ukm7t8'\"\n  [zoom]=\"[0]\"\n  [center]=\"[-74.5, 40]\"\n  (load)=\"onMapLoaded($event)\"\n>\n  <mgl-marker\n\n    *ngIf=\"mapStatus?.showUser\"\n    [lngLat]=\"[mapStatus?.userLocation.lng, mapStatus?.userLocation.lat]\"\n    #markers\n  >\n    <svg height=\"100\" width=\"100\">\n      <circle\n        cx=\"50\"\n        cy=\"50\"\n        r=\"10\"\n        stroke=\"white\"\n        stroke-width=\"2\"\n        fill=\"#4E8EF7\"\n      />\n    </svg>\n  </mgl-marker>\n  <mgl-marker style=\"text-align: center;\" *ngFor=\"let marker of nfts\" [lngLat]=\"marker.location\">\n    <!-- <div class=\"marker\" style=\"height: 24px; width: 24px\"> -->\n    <app-nft-grid-item [small]=\"true\" [nftId]=\"marker.id\"></app-nft-grid-item>\n    <!-- </div> -->\n  </mgl-marker>\n</mgl-map>\n","import { Injectable } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { LngLat } from 'mapbox-gl';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport abi from './abi/ABI.json';\nconst Web3 = require('web3');\n\nexport enum SoldStatus {\n  SOLD,\n  AVAILABLE,\n  OWNED,\n  RESALE,\n}\n// declare let window: any;\nexport interface NFT {\n  name: string;\n  location: string;\n  status: string;\n  price: string;\n  layer: number;\n  owner?: string;\n}\n\nexport interface NFTCreationEvent {\n  returnValues: {\n    Info: NFT;\n    tokenID: string;\n    creationTime: string;\n    saleTime: string;\n  };\n}\n\nexport interface BidInfo {\n  highestBid: string;\n  bidderAddress: string;\n}\n\nexport interface GeoNFT {\n  name: string;\n  location: LngLat;\n  image?: SafeHtml;\n  price: string;\n  status: SoldStatus;\n  id: number;\n  layer: number;\n  ownerAddress: string;\n  owner: boolean;\n  saleTime?: Date;\n  bidInfo?: BidInfo;\n  resaleTime?: Date;\n  creationTime?: Date;\n  latestBidAddress?: string;\n  hasUserBids?: boolean;\n  resaleId?: string;\n}\nexport interface WalletInfo {\n  address: string;\n  balance: string;\n}\n\nexport interface TransactionStartedEvent {\n  txid: string;\n}\n\nexport interface TransactionResultEvent {\n  success: boolean;\n  fee: number;\n  confirmationNumber: number;\n}\n\nexport interface NFTSaleEvent {\n  address: string;\n  tokenId: string;\n}\n\nexport interface NftBidEvent {\n  returnValues: {\n    newBid: BidInfo; // name of the property? auctionInfo, or something else?\n    tokenId: string;\n  };\n\n}\n\nexport interface ResaleBidEvent {\n  returnValues: {\n    latestInfo: ResaleInfo; // name of the property? auctionInfo, or something else?\n    tokenId: string;\n    resaleId: string;\n  };\n}\n\nexport interface BidViewModel {\n  highestBid: string;\n  latestBidIsOwn: boolean;\n  outBidden: boolean;\n}\n\nexport interface SaleRetrieveEvent {\n  returnValues: {\n    UserAddress: string;\n    tokenID: string;\n  };\n}\n\nexport interface ResaleInfo {\n  highestBid: string;\n  bidderAddress: string;\n  resalePrice: string;\n  tokenID: string;\n  resaleTime: number;\n}\nexport interface ResaleCreation {\n  returnValues: {\n    tokenID: string;\n    resaleID: string;\n    creationTime: string;\n    Info: {\n      resalePrice: string;\n      resaleTime: string;\n    }\n  };\n}\n\nexport interface ResaleRetrieve {\n  returnValues: {\n    tokenID: string;\n    resaleID: string;\n    previousOwner: string;\n    newOwner: string;\n  };\n}\n\nexport type TransactionEventUnion = TransactionResultEvent | TransactionStartedEvent;\n@Injectable()\nexport class ContractService {\n  contractAddress = '0x2111Fb953b5C0b4748060953A08ea9938c4A9eEc';\n  blockNumber = 12664489;\n  private loggedSubject = new BehaviorSubject<boolean>(false);\n  logged$ = this.loggedSubject.asObservable();\n\n  private walletInfoSubject = new BehaviorSubject<WalletInfo>(null);\n  walletInfo$ = this.walletInfoSubject.asObservable();\n\n  private errorSubject = new BehaviorSubject<string>('');\n  error$ = this.errorSubject.asObservable();\n\n  private nftsSubject = new BehaviorSubject<GeoNFT[]>([]);\n  nfts$ = this.nftsSubject.asObservable().pipe(\n    map(nfts => nfts.sort((a, b) => new Date(b.saleTime).getTime() - new Date(a.saleTime).getTime()),\n  ));\n\n  nftsOnSale$ = this.nftsSubject.asObservable().pipe(\n    filter(x => !!x),\n    map(nfts => {\n      return nfts.filter(((nft) => {\n        return nft.saleTime.getTime() > Date.now() && !nft.hasUserBids;\n      }));\n    }));\n  nftNotSold$ = this.nftsSubject.asObservable().pipe(\n    filter(x => !!x),\n    map(nfts => {\n      return nfts.filter(((nft) => {\n        return nft.saleTime.getTime() > Date.now() && !(nft.ownerAddress);\n      }));\n    }));\n\n  private ownedNFTsSubject = new BehaviorSubject<GeoNFT[]>(null);\n  ownedNFTs$ = this.ownedNFTsSubject.asObservable();\n\n  private transactionsSubject = new Subject<TransactionEventUnion>();\n  transactions$ = this.transactionsSubject.asObservable();\n\n  bidsMap = new Map<string, BidInfo[]>();\n  bidsMapSubject = new BehaviorSubject<Map<string, BidInfo[]>>(new Map<string, BidInfo[]>());\n  bidsMap$ = this.bidsMapSubject.asObservable();\n\n  // resalesMap = new Map<string, ResaleInfo[]>();\n  // resalesMapSubject = new BehaviorSubject<Map<string, ResaleInfo[]>>(new Map<string, ResaleInfo[]>());\n  // resalesMap$ = this.resalesMapSubject.asObservable();\n\n  newBidsSubject = new Subject<NftBidEvent>();\n  newBids$ = this.newBidsSubject.asObservable();\n\n\n  newNftsSubject = new Subject<NFTCreationEvent>();\n  newNfts$ = this.newNftsSubject.asObservable();\n\n  contract: any;\n  currentWeb3: any;\n  wallet: any;\n  selectedAddress: string;\n\n  initializing = false;\n  applyNftProcessing: boolean;\n\n  constructor(private domSanitizer: DomSanitizer) { }\n\n  async init(): Promise<void> {\n    this.initializing = true;\n    this.wallet = (window as any).ethereum || (window as any).onewallet;\n    if (!this.wallet) {\n      throw new Error('No supported wallet');\n    }\n\n    // Ask User permission to connect to Metamask\n    //   await window.ethereum.enable();\n    try {\n      if (!this.wallet.selectedAddress) {\n        await this.wallet.enable(); // <<< ask for permission\n      }\n      this.currentWeb3 = new Web3(this.wallet);\n      this.contract = new this.currentWeb3.eth.Contract(\n        abi,\n        this.contractAddress\n      );\n\n      this.selectedAddress = this.wallet.selectedAddress;\n      console.log('selected address', this.selectedAddress);\n      await this.loadWalletInfo();\n      // await this.loadOwnedNFTs();\n      // await this.loadNFTs(1);\n      await this.loadPassedEvents();\n      this.setEvents();\n      this.initializing = false;\n    } catch (error) {\n      this.initializing = false;\n      this.errorSubject.next(error);\n      throw new Error(error);\n    }\n  }\n\n  setEvents(): void {\n    this.wallet.on('networkChanged', (networkId) => {\n      // Time to reload your interface with the new networkId\n      console.log('New network ID:', networkId);\n      if (networkId !== '0x6357d2e0') {\n        console.error('You are not connected to harmony testnet s0');\n        this.errorSubject.next('You are not connected to harmony testnet s0');\n        return;\n      }\n    });\n    this.contract.events.NFTCreation({})\n      .on('data', async (nft: NFTCreationEvent) => {\n        console.log('nft created', nft);\n        this.newNftsSubject.next(nft);\n        const newGeoNftList = await this.applyNftCreation(this.nftsSubject.getValue(), nft);\n        this.nftsSubject.next(newGeoNftList);\n      });\n\n    this.contract.events.NFTBid({})\n      .on('data', (bidEvent: NftBidEvent) => {\n        // TODO: update bidsMap\n        // console.log('nft created', nft);\n        const nft = this.getNftById(Number(bidEvent.returnValues.tokenId));\n        const nftIdx = this.nftsSubject.getValue().findIndex(x => x.id === Number(bidEvent.returnValues.tokenId));\n        const nfts = this.nftsSubject.getValue();\n        // set status to resale\n\n        // nft.price = resaleEvent.\n        // set date to new date\n        nfts[nftIdx] = this.applyNftBid(nft, bidEvent);\n        this.nftsSubject.next(nfts);\n\n      });\n\n    this.contract.events.SaleRetrieve({})\n      .on('data', (saleEvent: SaleRetrieveEvent) => {\n        const nft = this.getNftById(Number(saleEvent.returnValues.tokenID));\n        const nftIdx = this.nftsSubject.getValue().findIndex(x => x.id === Number(saleEvent.returnValues.tokenID));\n        const nfts = this.nftsSubject.getValue();\n        nft.owner = saleEvent.returnValues.UserAddress.toLowerCase() === this.selectedAddress;\n        nft.ownerAddress = saleEvent.returnValues.UserAddress;\n        // nft.bidInfo = null;\n        nfts[nftIdx] = this.applySaleRetrieve(nft, saleEvent);\n        nfts[nftIdx] = nft;\n        this.nftsSubject.next(nfts);\n      });\n\n    this.contract.events.ResaleCreation({})\n      .on('data', (resaleEvent: ResaleCreation) => {\n        console.log('ResaleCreation', resaleEvent);\n        const nft = this.getNftById(Number(resaleEvent.returnValues.tokenID));\n        const nftIdx = this.nftsSubject.getValue().findIndex(x => x.id === Number(resaleEvent.returnValues.tokenID));\n        const nfts = this.nftsSubject.getValue();\n        nfts[nftIdx] = this.applyResaleCreationToNft(nft, resaleEvent);\n        this.nftsSubject.next(nfts);\n      });\n\n    this.contract.events.ResaleBid({})\n      .on('data', (resaleBidEvent) => {\n        // add resaleBid to bidsMap, just reusing existing bids system\n        console.log('ResaleBid', resaleBidEvent);\n        const nft = this.getNftById(Number(resaleBidEvent.returnValues.tokenID));\n        const nftIdx = this.nftsSubject.getValue().findIndex(x => x.id === Number(resaleBidEvent.returnValues.tokenID));\n        const nfts = this.nftsSubject.getValue();\n        nfts[nftIdx] = this.applyResaleBidToNft(nft, resaleBidEvent);\n        this.nftsSubject.next(nfts);\n      });\n\n    this.contract.events.ResaleRetrieve({})\n      .on('data', (resaleRetrieveEvent) => {\n        // same as sale retrieve\n        const nft = this.getNftById(Number(resaleRetrieveEvent.returnValues.tokenID));\n        const nftIdx = this.nftsSubject.getValue().findIndex(x => x.id === Number(resaleRetrieveEvent.returnValues.tokenID));\n        const nfts = this.nftsSubject.getValue();\n\n        nfts[nftIdx] = this.applyResaleRetrieveToNft(nft, resaleRetrieveEvent);\n        this.nftsSubject.next(nfts);\n      });\n  }\n\n  private epochToDate(epoch: string): Date {\n    const date = new Date(0);\n    const utcSeconds = Number(epoch);\n    date.setUTCSeconds(utcSeconds);\n    return date;\n  }\n\n  getSvg$(tokenId: number): Observable<SafeHtml> {\n    const svgSub = new Subject();\n    const svg$ = svgSub.asObservable();\n    this.contract.methods\n      .GetTokenSVG(tokenId).call({ from: this.selectedAddress })\n      .then((svg: string) => {\n        svgSub.next(this.domSanitizer.bypassSecurityTrustHtml(decodeURIComponent(svg)));\n        svgSub.complete();\n      });\n    return svg$;\n  }\n\n  getSvg(tokenId: number): Promise<SafeHtml> {\n    return this.contract.methods\n      .GetTokenSVG(tokenId).call({ from: this.selectedAddress })\n      .then((svg: string) => {\n        return this.domSanitizer.bypassSecurityTrustHtml(decodeURIComponent(svg));\n      });\n  }\n\n  getNftById(tokenId: number): GeoNFT {\n    return this.nftsSubject.getValue().find(x => x.id === tokenId);\n  }\n\n  getNftById$(tokenId: number): Observable<GeoNFT> {\n    return this.nfts$.pipe(map(nfts => nfts.find(x => x.id === tokenId)));\n  }\n\n  private async loadWalletInfo(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const address = this.wallet.selectedAddress;\n      this.currentWeb3.eth\n        .getBalance(this.selectedAddress)\n        .then((balance) => {\n          const displayBalance = this.currentWeb3.utils.fromWei(balance, 'ether');\n          this.walletInfoSubject.next({\n            address,\n            balance: displayBalance,\n          });\n          resolve();\n        }, (err) => reject(err));\n    });\n  }\n\n  bidNFT(tokenId: number, amount: string): void {\n    // TODO: make it observable\n    const result = this.contract.methods\n      .Bid(tokenId)\n      .send({ from: this.selectedAddress, value: amount });\n\n    this.listenToTransaction(result);\n  }\n\n  bidResale(resaleId: string, tokenId: string, amount: string): void {\n    console.log('bidResale', resaleId, tokenId, amount);\n    const transaction = this.contract.methods.bidResale(resaleId, tokenId).send({ from: this.selectedAddress, value: amount });\n    this.listenToTransaction(transaction);\n  }\n\n  resaleNft(price: string, tokenId: string, resaleTime: number): void {\n    // TODO: return transaction, push to resales events stream\n    console.log('resale token', price, tokenId, 600);\n    const result = this.contract.methods\n      .putTokenForResale(price, tokenId, 600) // TODO: MOCKED 5mins!!\n      .send({ from: this.selectedAddress });\n    this.listenToTransaction(result);\n  }\n\n  private loadPassedEvents(): Promise<void> {\n    return Promise.all([\n      this.contract.getPastEvents('NFTCreation', { fromBlock: this.blockNumber }),\n      this.contract.getPastEvents('NFTBid', { fromBlock: this.blockNumber }),\n      this.contract.getPastEvents('ResaleCreation', { fromBlock: this.blockNumber }),\n      this.contract.getPastEvents('ResaleBid', { fromBlock: this.blockNumber }),\n      this.contract.getPastEvents('ResaleRetrieve', { fromBlock: this.blockNumber })\n    ])\n      .then(async ([\n        nftCreations,\n        nftBids,\n        resaleCreations,\n        resaleBids,\n        resaleRetrieves\n      ]: [NFTCreationEvent[], NftBidEvent[], ResaleCreation[], ResaleBidEvent[], ResaleRetrieve[]]) => {\n        // assign resales as bids here\n        let nftList = [];\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = 0; i < nftCreations.length; i++) {\n          nftList = await this.applyNftCreation(nftList, nftCreations[i]);\n        }\n        nftBids.forEach((nftBid: NftBidEvent) => {\n          const nftId = nftBid.returnValues.tokenId;\n          const nft = nftList.find(x => String(x.id) === nftId);\n          const nftIdx = nftList.findIndex(x => String(x.id) === nftId);\n\n          nftList[nftIdx] = this.applyNftBid(nft, nftBid);\n        });\n\n        resaleCreations.forEach((resaleCreation: ResaleCreation) => {\n          const nftId = resaleCreation.returnValues.tokenID;\n          const nft = nftList.find(x => String(x.id) === nftId);\n          const nftIdx = nftList.findIndex(x => String(x.id) === nftId);\n\n          nftList[nftIdx] = this.applyResaleCreationToNft(nft, resaleCreation);\n        });\n\n        resaleBids.forEach((resaleBid: ResaleBidEvent) => {\n          const nftId = resaleBid.returnValues.tokenId;\n          const nft = nftList.find(x => String(x.id) === nftId);\n          const nftIdx = nftList.findIndex(x => String(x.id) === nftId);\n\n          nftList[nftIdx] = this.applyResaleBidToNft(nft, resaleBid);\n        });\n\n        resaleRetrieves.forEach((resaleRetrieve) => {\n          const nftId = resaleRetrieve.returnValues.tokenID;\n          const nft = nftList.find(x => String(x.id) === nftId);\n          const nftIdx = nftList.findIndex(x => String(x.id) === nftId);\n\n          nftList[nftIdx] = this.applyResaleRetrieveToNft(nft, resaleRetrieve);\n        });\n        // filter out nfts we can delete for sure\n\n        nftList = this.cleanupNfts(nftList);\n        // const resaleRetrieve = resaleEvents[2] as ResaleRetir\n        this.nftsSubject.next(nftList);\n        // this.startNFTWatch();\n      })\n      .catch(e => {\n        console.error(e);\n      });\n  }\n\n  private cleanupNfts(nfts: GeoNFT[]): GeoNFT[] {\n    return nfts.filter((nft: GeoNFT) => {\n      return !(!nft.bidInfo && nft.saleTime.getTime() < Date.now() && !nft.ownerAddress);\n    });\n  }\n\n  // as we're scanning whole history of contract events, \"appliers\" are desired way to load only newest state of nfts to RAM memory\n  // limiting this resource usage by browser. Historical data should be lost or applied to GeoNFT entity in minimal way if needed on view\n\n  // appliers can be used also on new events. Check which tokenID has an event, find GeoNFT and process it by respective to event applier\n  // TODO:  refactor code to use that approach with all of events\n\n  private async applyNftCreation(nftList: GeoNFT[], nftEvent: NFTCreationEvent): Promise<GeoNFT[]> {\n    if (this.applyNftProcessing) {\n      return nftList;\n    }\n    this.applyNftProcessing = true;\n    if (nftList.find(x => String(x.id) === nftEvent.returnValues.tokenID)) {\n      return nftList;\n    }\n    const geoNft = await this.mapNFTCreationEventToGeoNFT(nftEvent);\n    nftList.push(geoNft);\n    this.applyNftProcessing = false;\n    return nftList;\n  }\n\n  private applyNftBid(nft: GeoNFT, nftBid: NftBidEvent): GeoNFT {\n    // set BidInfo if not exist or exists with lower value\n    if (nftBid.returnValues.newBid.bidderAddress.toLowerCase() === this.selectedAddress.toLowerCase()) {\n      nft.hasUserBids = true;\n    }\n    nft.bidInfo = nftBid.returnValues.newBid;\n\n    return nft;\n  }\n\n  private applySaleRetrieve(nft: GeoNFT, saleRetrieveEvent: SaleRetrieveEvent): GeoNFT {\n    // if (nft.)\n    nft.owner = saleRetrieveEvent.returnValues.UserAddress.toLowerCase() === this.selectedAddress;\n    nft.ownerAddress = saleRetrieveEvent.returnValues.UserAddress;\n    nft.status = SoldStatus.OWNED;\n    return nft;\n\n  }\n\n  private applyResaleCreationToNft(nft: GeoNFT, resaleCreation: ResaleCreation): GeoNFT {\n    console.log('ResaleCreation', resaleCreation, Date.now());\n    if (this.epochToDate(resaleCreation.returnValues.Info.resaleTime).getTime() > Date.now()) {\n      nft.status = SoldStatus.RESALE;\n      // set price to new price\n      nft.bidInfo = null;\n      nft.price = resaleCreation.returnValues.Info.resalePrice;\n      // console.log('resaleCreation', this.epochToDate(resaleCreation.returnValues.Info.resaleTime));\n      nft.saleTime = this.epochToDate(resaleCreation.returnValues.Info.resaleTime);\n      nft.resaleTime = this.epochToDate(resaleCreation.returnValues.creationTime);\n      nft.resaleId = resaleCreation.returnValues.resaleID;\n    }\n    return nft;\n  }\n\n  private applyResaleBidToNft(nft: GeoNFT, resaleBidEvent: ResaleBidEvent): GeoNFT {\n    // set price to new price, set latest bidInfo to new bid\n    nft.price = resaleBidEvent.returnValues.latestInfo.resalePrice;\n    nft.bidInfo = {\n      bidderAddress: resaleBidEvent.returnValues.latestInfo.bidderAddress,\n      highestBid: resaleBidEvent.returnValues.latestInfo.highestBid\n    };\n    return nft;\n  }\n\n  private applyResaleRetrieveToNft(nft: GeoNFT, resaleRetrieve: ResaleRetrieve): GeoNFT {\n    // change owner to new owner, change status to \"OWNED\"\n    nft.owner = resaleRetrieve.returnValues.newOwner.toLowerCase() === this.selectedAddress.toLowerCase();\n    nft.ownerAddress = resaleRetrieve.returnValues.newOwner;\n    nft.status = nft.owner ? SoldStatus.OWNED : SoldStatus.SOLD;\n    return nft;\n  }\n\n\n  getOwnedNFTs$(): Observable<GeoNFT[]> {\n    return this.nfts$.pipe(\n      map(\n        (nfts: GeoNFT[]) => {\n          return nfts.filter(nft => {\n            return nft.owner;\n          });\n        })\n    );\n  }\n\n  refresh(): void {\n    console.log('refreshing list');\n    this.nftsSubject.next(this.cleanupNfts(this.nftsSubject.getValue()));\n  }\n\n\n  private async mapNFTCreationEventToGeoNFT(nftCreation: NFTCreationEvent): Promise<GeoNFT> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const image = await this.getSvg(Number(nftCreation.returnValues.tokenID));\n        const owner = await this.ownerOf(Number(nftCreation.returnValues.tokenID));\n        const status = nftCreation.returnValues.Info.status === '1' ? SoldStatus.AVAILABLE :\n          ((owner as string) === this.selectedAddress ? SoldStatus.OWNED : SoldStatus.SOLD);\n        resolve({\n          id: Number(nftCreation.returnValues.tokenID),\n          layer: Number(nftCreation.returnValues.Info.layer),\n          location: new LngLat(\n            Number(nftCreation.returnValues.Info.location.split(',')[1]),\n            Number(nftCreation.returnValues.Info.location.split(',')[0])\n          ),\n          name: nftCreation.returnValues.Info.name,\n          ownerAddress: owner as string,\n          owner: owner ? (owner as string).toLowerCase() === this.selectedAddress.toLowerCase() : false,\n          saleTime: this.epochToDate(nftCreation.returnValues.saleTime),\n          creationTime: this.epochToDate(nftCreation.returnValues.creationTime),\n          price: nftCreation.returnValues.Info.price,\n          image,\n          status,\n        });\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  auctionInfo$(tokenID: number): Observable<BidInfo> {\n    const bidSubject = new Subject<BidInfo>();\n    const bid$ = bidSubject.asObservable();\n    this.contract.methods.AuctionInfo(tokenID)\n      .call({ from: this.selectedAddress })\n      .then((bidInfo) => {\n        bidSubject.next(bidInfo);\n        bidSubject.complete();\n      });\n    return bid$;\n  }\n\n  auctionInfo(tokenID: number): Promise<BidInfo> {\n    return this.contract.methods.AuctionInfo(tokenID)\n      .call({ from: this.selectedAddress });\n  }\n\n  async ownerOf(tokenId: number): Promise<string> {\n    // TODO: treat error as lack of owner\n    return new Promise((resolve) => {\n      this.contract.methods\n        .ownerOf(tokenId)\n        .call({ from: this.selectedAddress })\n        .then((result) => {\n          resolve(result);\n        })\n        .catch(e => {\n          resolve(null);\n        });\n    });\n  }\n\n  getNftsWithMyBids$(): Observable<GeoNFT[]> {\n    return this.nftsSubject.pipe(\n      map((nfts: GeoNFT[]) => {\n        return nfts.filter(x => (x.status === SoldStatus.AVAILABLE || x.status === SoldStatus.RESALE) &&\n          (x.saleTime.getTime() > Date.now()) && x.hasUserBids && !x.owner);\n      })\n    );\n\n  }\n\n  getNftsToRetrieve$(): Observable<GeoNFT[]> {\n    return this.nfts$.pipe(\n      map(nfts => nfts.filter(nft => nft.bidInfo && nft.bidInfo.bidderAddress.toLowerCase() === this.selectedAddress.toLowerCase() &&\n        nft.saleTime.getTime() < Date.now() && !nft.owner))\n    );\n  }\n\n  enableResalePermission(): void {\n    const transaction = this.contract.methods\n      .enableResale()\n      .send({ from: this.selectedAddress });\n    this.listenToTransaction(transaction);\n  }\n\n  disableResalePermission(): void {\n    const transaction = this.contract.methods\n      .disableResale()\n      .send({ from: this.selectedAddress });\n    this.listenToTransaction(transaction);\n  }\n\n  async isApprovedForAll(): Promise<boolean> {\n    return this.contract.methods.isApprovedForAll(this.selectedAddress, this.contractAddress);\n  }\n\n  retrieveNFTs(tokenIds: string[]): void {\n    const transaction = this.contract.methods.RetrieveNFT(tokenIds).send({ from: this.selectedAddress });\n    this.listenToTransaction(transaction);\n  }\n\n\n  /**\n   * TODO: retrieve many NFTs at once\n   * @param tokenId\n   */\n  retrieveResaleNFT(tokenId: string): void {\n    const transaction = this.contract.methods.RetrieveReSale(tokenId).send({ from: this.selectedAddress });\n    this.listenToTransaction(transaction);\n  }\n\n  listenToTransaction(transaction): void {\n    transaction\n      .on('transactionHash', (hash: string) => {\n        console.log(\n          'Transaction sent successfully. Check console for Transaction hash'\n        );\n        this.transactionsSubject.next({\n          txid: hash\n        });\n        console.log('Transaction Hash is ', hash);\n      })\n      .on('error', (error) => {\n        this.transactionsSubject.error(error);\n      })\n      .once('confirmation', async (confirmationNumber, receipt) => {\n        if (receipt.status) {\n          console.log('Transaction processed successfully', receipt);\n          this.transactionsSubject.next({\n            fee: receipt.fee,\n            success: true,\n            txid: receipt.id,\n            confirmationNumber\n          });\n        } else {\n          this.transactionsSubject.error({\n            fee: receipt.fee,\n            success: false,\n            txid: receipt.id,\n            confirmationNumber\n          });\n        }\n        await this.loadWalletInfo();\n        console.log(receipt);\n      });\n  }\n\n  weiToOne(balance): string {\n    return this.currentWeb3.utils.fromWei(balance, 'ether');\n  }\n\n\n  oneToWei(balance): string {\n    return this.currentWeb3.utils.toWei(balance, 'ether');\n  }\n  logout(): void {\n    // TODO: to implement\n    this.currentWeb3 = null;\n    this.contract = null;\n    this.selectedAddress = null;\n    this.nftsSubject.next([]);\n\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['./start.component.scss'],\n})\nexport class StartComponent implements OnInit {\n\n  constructor(\n\n  ) {}\n\n  ngOnInit(): void {}\n\n}\n","import { Component, Input, OnInit, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-price-picker',\n  templateUrl: './price-picker.component.html',\n  styleUrls: ['./price-picker.component.scss']\n})\nexport class PricePickerComponent implements OnInit, OnChanges {\n  @Input()\n  minPrice: number;\n  currentPrice: number;\n  @Output()\n  bidChanged = new EventEmitter<number>();\n  constructor() { }\n  ngOnInit(): void {\n    this.currentPrice = Number((this.minPrice + 0.1).toPrecision(2));\n    this.bidChanged.emit(this.currentPrice);\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    this.currentPrice = Number((changes.minPrice.currentValue + 0.1).toPrecision(2));\n    console.log('currentPrice', this.currentPrice);\n  }\n  subtract(): void {\n    this.currentPrice = Math.max(this.currentPrice - 0.1, this.minPrice + 0.1);\n    this.bidChanged.emit(this.currentPrice);\n  }\n  add(): void {\n    this.currentPrice = Number((this.currentPrice + 0.1).toPrecision(2));\n    this.bidChanged.emit(this.currentPrice);\n  }\n\n}\n","\n<div class=\"price-ticker\">\n    <mat-button-toggle-group name=\"fontStyle\" aria-label=\"Font Style\">\n      <mat-button-toggle class=\"toggle minus\" (click)=\"subtract()\" color=\"primary\" value=\"bold\">-</mat-button-toggle>\n      <mat-button-toggle class=\"middle\" value=\"italic\">{{ currentPrice }} ONE</mat-button-toggle>\n      <mat-button-toggle class=\"toggle plus\" (click)=\"add()\" color=\"primary\" value=\"bold\">+</mat-button-toggle>\n    </mat-button-toggle-group>\n</div>\n","import { Component, OnInit, ChangeDetectionStrategy, Input, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { Subscription, timer } from 'rxjs';\nimport { BidInfo, BidViewModel, ContractService, GeoNFT, SoldStatus } from 'src/app/services/contract.service';\n\n@Component({\n  selector: 'app-nft-grid-item',\n  templateUrl: './nft-grid-item.component.html',\n  styleUrls: ['./nft-grid-item.component.scss'],\n})\nexport class NftGridItemComponent implements OnInit, OnDestroy {\n  @Input()\n  nftId: number;\n  @Input()\n  small = false;\n  nft: GeoNFT;\n\n  timeLeft: Date;\n  subscriptions = [];\n  endedPercent: number;\n  SoldStatus = SoldStatus;\n  Math = Math;\n  constructor(private contractService: ContractService, private changeDetector: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n\n    this.subscriptions.push(\n      timer(1000, 1000).subscribe(() => {\n        if (this.timeLeft && this.nft) {\n          this.timeLeft = new Date(this.timeLeft.getTime() - 1000);\n          // console.log('endedPercent', this.endedPercent);\n          const timeFromCreated = this.nft.saleTime.getTime() - Date.now();\n          this.endedPercent = (100 - (timeFromCreated / (this.nft.saleTime.getTime() - this.nft.creationTime.getTime())) * 100);\n          this.changeDetector.detectChanges();\n        }\n      })\n    );\n    this.subscriptions.push(this.contractService.getNftById$(this.nftId).subscribe((nft) => {\n      this.nft = nft;\n      console.log('rendering grid item', this.nft);\n      if (this.nft.saleTime.getTime() < Date.now()) {\n        this.timeLeft = null;\n      } else {\n        this.timeLeft = new Date(Math.max(this.nft.saleTime.getTime() - Date.now(), 0));\n      }\n      const timeFromCreated = this.nft.saleTime.getTime() - Date.now();\n      this.endedPercent = (100 - (timeFromCreated / (this.nft.saleTime.getTime() - this.nft.creationTime.getTime())) * 100);\n      this.changeDetector.detectChanges();\n    }));\n\n  }\n\n\n  calculateTimeLeft(): void {\n\n    if (this.timeLeft) {\n      this.subscriptions.push(\n        timer(1000, 1000).subscribe(() => {\n          if (this.timeLeft) {\n            this.timeLeft = new Date(this.timeLeft.getTime() - 1000);\n            const timeFromCreated = this.nft.saleTime.getTime() - Date.now();\n            this.endedPercent = (100 - (timeFromCreated / (this.nft.saleTime.getTime() - this.nft.creationTime.getTime())) * 100);\n            this.changeDetector.detectChanges();\n          }\n        })\n      );\n    }\n\n  }\n\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((sub: Subscription) => {\n      sub.unsubscribe();\n    });\n  }\n\n}\n","<div\n  [routerLink]=\"['/', 'single-nft', nft.id]\"\n  [ngClass]=\"[\n    small ? 'container-inner-small' : 'container-inner-big',\n    !nft.owner && (nft.status === 0 || !timeLeft) && !nft.resaleId ? 'grayscale' : ''\n  ]\"\n>\n  <div class=\"spinner\">\n    <mat-spinner\n      *ngIf=\"nft.status !== SoldStatus.SOLD\"\n      mode=\"determinate\"\n      [value]=\"100 - endedPercent\"\n      [diameter]=\"small ? 59 : 81\"\n      strokeWidth=\"3\"\n      [color]=\"nft.status === SoldStatus.RESALE ? 'accent' : 'primary'\"\n    ></mat-spinner>\n  </div>\n  <div\n    [ngClass]=\"[small ? 'nftname-small' : 'nftname-big']\"\n  >\n    <span>{{ nft?.name }}</span>\n  </div>\n  <div\n    [ngClass]=\"[\n      nft?.owner ? 'owned' : nft?.ownerAddress ? 'ownedByOther' : 'available',\n      small ? 'circle-small' : 'circle-big'\n    ]\"\n  >\n    <div class=\"svg-icon\" [innerHTML]=\"nft.image\"></div>\n  </div>\n  <div [ngClass]=\"[small ? 'label-wrapper-small' : 'label-wrapper-big']\">\n    <mat-chip\n      disableRipple\n      *ngIf=\"!(!nft.owner && (nft.status === 0 || !timeLeft))\"\n      [color]=\"nft.status === SoldStatus.RESALE ? 'accent' : 'primary'\"\n      selected\n    >\n      {{\n        nft.bidInfo\n          ? (nft.bidInfo.highestBid | weiToOne: 4)\n          : (nft?.price | weiToOne: 4)\n      }}\n      ONE</mat-chip\n    >\n  </div>\n</div>\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-loading-button',\n  templateUrl: './loading-button.component.html',\n  styleUrls: ['./loading-button.component.scss'],\n  animations: [\n    trigger('disableButton', [\n      state('true', style({ width: '300px' })),\n      state('false', style({ width: '65px' })),\n      transition('false <=> true', animate('500ms ease-out')),\n    ]),\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoadingButtonComponent implements OnInit {\n  @Input()\n  loading: boolean;\n  @Input()\n  label: string;\n  @Input()\n  color = 'primary';\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div\n    class=\"button-container\"\n    [@disableButton]=\"!loading\"\n>\n    <button\n        [disabled]=\"loading\"\n        mat-raised-button\n        [color]=\"color\"\n    >\n        <div\n            *ngIf=\"!loading\"\n            class=\"inner-button\"\n        >\n            <ng-content></ng-content>\n\n        </div>\n\n        <mat-icon *ngIf=\"loading\">\n            <mat-spinner diameter=\"20\"></mat-spinner>\n        </mat-icon>\n    </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SingleNftComponent } from './single-nft/single-nft.component';\nimport { StartComponent } from './start/start.component';\nimport { TransactionResultComponent } from './transaction-result/transaction-result.component';\nimport { AllNFTsComponent } from './all-nfts/all-nfts.component';\nimport { SellComponent } from './sell/sell.component';\nimport { RetrieveNftsComponent } from './retrieve-nfts/retrieve-nfts.component';\nimport { RouteLockGuard } from './services/guards/route-lock.guard';\n\nconst routes: Routes = [\n  {\n    path: '*',\n    redirectTo: '',\n    pathMatch: 'full'\n  },\n  {\n    component: StartComponent,\n    path: 'start',\n  },\n  {\n    component: AllNFTsComponent,\n    path: 'all-nfts',\n  },\n  {\n    component: SingleNftComponent,\n    path: 'single-nft/:id',\n  },\n  {\n    component: SellComponent,\n    path: 'sell/:id'\n  },\n  {\n    component: TransactionResultComponent,\n    path: 'transaction-result',\n  },\n  {\n    component: RetrieveNftsComponent,\n    path: 'retrieve-nfts',\n    canDeactivate: [RouteLockGuard],\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}